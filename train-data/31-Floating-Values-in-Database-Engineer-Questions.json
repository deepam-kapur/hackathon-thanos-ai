{"url":"https://support.hackerrank.com/hc/en-us/articles/220163887-Floating-Values-in-Database-Engineer-Questions","body":"<h2>Overview</h2>\n<p>When you create a Database Engineer question, you can upload a CSV to create a table. Each of the database systems that are supported, handles floating-point values differently. <span>This article provides you with an example to show how each database system handles the floating-point values. Currently, HackerRank supports Microsoft SQL, MySQL, Oracle, and DB2 databases. </span></p>\n<h2>Floating Point Values Sample</h2>\n<p>The following example shows how different database systems handle the data. When creating a Database Engineer question, take into account that the queries return different results depending on the database system used, and scoring is done by basic string comparison.</p>\n<p><img src=\"https://support.hackerrank.com/hc/article_attachments/115012620108/dbrank.png\" alt=\"dbrank.png\"><br>A table named Employee with the following CSV with 5 columns. The points column is afloat.</p>\n<p>Id,cid,aid,points,score:<br>1,5608,1,0.59,4<br>1,5608,2,8.70,5<br>1,5608,3,4.99,1<br>1,5608,5,2.88,3<br>1,5608,9,0.79,1<br>1,5608,5,7.58,1<br>For the query \"SELECT * from Employee\", the following databases treat the float data in the following ways:</p>\n<p><strong>Oracle</strong><br>In Oracle, the points column is of type FLOAT. The output is as follows:<br>1 5608 1 .59 4 <br>1 5608 2 8.7 5 <br>1 5608 3 4.99 1 <br>1 5608 5 2.88 3 <br>1 5608 9 .79 1 <br>1 5608 5 7.58 1<br>Oracle database trims the leading zeros.<br><strong>MySQL</strong><br>In MySQL, the points column is of type FLOAT. The output is as follows:<br>1 5608 1 0.59 4 <br>1 5608 2 8.7 5 <br>1 5608 3 4.99 1 <br>1 5608 5 2.88 3 <br>1 5608 9 0.79 1 <br>1 5608 5 7.58 1 <br>MySQL prints the data as it is provided.<br><strong>MS SQL</strong><br>In MS SQL, the points column is of type REAL. The output is as follows:<br>1 5608 1 0.58999997 4 <br>1 5608 2 8.6999998 5 <br>1 5608 3 4.9899998 1 <br>1 5608 5 2.8800001 3 <br>1 5608 9 0.79000002 1 <br>1 5608 5 7.5799999 1<br>MS SQL prints an approximate value. Use the data type DECIMAL (10, precision) to fix the places after the decimal that are required in the output. If you change the schema-creating SQL we generated from the CSV so that the points column is of type DECIMAL(10, 2), the output changes to this:<br>1 5608 1 .59 4 <br>1 5608 2 8.70 5 <br>1 5608 3 4.99 1 <br>1 5608 5 2.88 3 <br>1 5608 9 .79 1 <br>1 5608 5 7.58 1 <br>MS SQL removes the leading zeros.<br><strong>DB2</strong><br>In DB2, the points column is of type DECFLOAT. The output is as follows: <br>1 5608 1 0.59 4 <br>1 5608 2 8.7 5 <br>1 5608 3 4.99 1 <br>1 5608 5 2.88 3 <br>1 5608 9 0.79 1 <br>1 5608 5 7.58 1<br>DB2 prints the data as it is provided.</p>","title":"Floating Values in Database Engineer Questions"}