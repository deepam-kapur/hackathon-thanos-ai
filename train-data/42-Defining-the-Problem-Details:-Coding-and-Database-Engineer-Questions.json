{"url":"https://support.hackerrank.com/hc/en-us/articles/115006427927-Defining-the-Problem-Details-Coding-and-Database-Engineer-Questions","body":"<h2 id=\"h_01HAAQWQW959DSVCT3GNRR75CT\">Overview</h2>\n<p>The problem details are an integral part of creating any question. Particularly for the coding and database-related questions, a good problem statement should comprise a clear and detailed problem description, supporting data schema, at least one sample test case with an explanation, and problem constraints.</p>\n<p>HackerRank for Work simplifies this process with predefined templates to describe your <strong>Coding</strong> and <strong>Database Engineer</strong> type questions. The templates are a simple and structured format to define your questions clearly.  </p>\n<p>It is recommended that you use these templates to define your Coding and Database Engineer type question problem details because it provide a structured and clear view of the question to your candidates during Tests and Interviews.</p>\n<h2 id=\"h_01HAAQWQWAVSM0VE1R0QQ33T60\">How to Define a Problem Statement?</h2>\n<p><strong>Steps</strong></p>\n<ol>\n<li>While creating a question, navigate to the <strong>Problem Details</strong> field on the <strong>Question Details</strong> page.</li>\n<li>On the extreme right of the toolbar, click on the <strong>Use content templates</strong> option. <img src=\"https://support.hackerrank.com/hc/article_attachments/20703073291155\" alt=\"Use Templates.png\">\n</li>\n</ol>\n<p> The following templates are available for selection:</p>\n<table class=\"table\" style=\"height: 71px; width: 100%;\">\n<tbody>\n<tr>\n<td class=\"wysiwyg-text-align-center\" style=\"background-color: #eafcef;\">\n<p><strong>Template </strong></p>\n</td>\n<td class=\"wysiwyg-text-align-center\" style=\"background-color: #eafcef;\">\n<p><strong>Description</strong></p>\n</td>\n</tr>\n<tr>\n<td style=\"width: 309.83px;\">HackerRank's Coding Question Template</td>\n<td style=\"width: 310.739px;\">\n<p>Recommended for coding-type questions. Provides the format to define the:</p>\n<ul>\n<li>problem statement</li>\n<li>function</li>\n<li>constraints</li>\n<li>sample input values</li>\n<li>sample output values</li>\n</ul>\n</td>\n</tr>\n<tr>\n<td style=\"width: 309.83px;\">HackerRank's Database Question Template</td>\n<td style=\"width: 310.739px;\">\n<p>Recommended for Database Engineer-type questions. Provides the format to define the:</p>\n<ul>\n<li>problem description with any database queries</li>\n<li>the database tables schema </li>\n<li>the input using the sample table schema</li>\n<li>the output values</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://support.hackerrank.com/hc/article_attachments/20703073298963\" alt=\"Templates.png\"></p>\n<center><em> Selecting a template </em></center>\n<ol start=\"3\">\n<li>You can select the required template based on your question type. The template format is added to your <strong>Problem description</strong> area.</li>\n<li>Detail the question as per the format.<img src=\"https://support.hackerrank.com/hc/article_attachments/20703073300243\" alt=\"Problem Description.png\">\n</li>\n</ol>\n<center><em> A coding question description using a coding template </em></center>\n<p><em><strong>For example</strong>:<br></em></p>\n<table style=\"height: 382px;\" width=\"738\">\n<tbody>\n<tr>\n<td style=\"width: 733.466px;\">\n<p><strong>Problem Description</strong></p>\n<p>Write a program that reads in a string and finds the first non-repeated character in that string. Treat the characters as case sensitive. Therefore, \"a\" and \"A\" are different. You will be required to complete a given function <em>nonRepeated.</em></p>\n<p><strong>Function Description</strong></p>\n<p><em>Char nonRepeated(char * str)</em></p>\n<p><strong>Constraints</strong></p>\n<ul>\n<li>The length of the string is less than 256 characters.</li>\n<li>It is guaranteed that there will be at least one non-repeated character in the given string</li>\n</ul>\n<p><strong>Input Format</strong></p>\n<p><em>There is one sentence in the input that contains String Str.</em></p>\n<p><strong>Sample Test Case with Explanation</strong></p>\n<p>Sample Input</p>\n<ul>\n<li> balloonbA</li>\n</ul>\n<p>Sample Output</p>\n<ul>\n<li>a</li>\n</ul>\n<p>Explanation</p>\n<ul>\n<li>\"a\" is the first character that is not repeated in the given string.</li>\n</ul>\n<p><strong>Output Format</strong></p>\n<p>A single character that represents the first character in <em>Str</em> that is not repeated.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"h_01HAAQWQWA0EN25WSVN9VDM182\">Recommended Practices to Define a Problem</h2>\n<div class=\"page\" title=\"Page 3\">\n<div class=\"section\">\n<div class=\"layoutArea\">\n<div class=\"column\">\n<ol>\n<li>\n<h3 id=\"h_01HAAQWQWAPGWWQDPQ1Z9DMN3F\">Problem Description</h3>\n</li>\n</ol>\n<ul>\n<li>\n<strong>Variable naming convention</strong>:\n<ul>\n<li>The variables in the problem statement must match those in the code stubs. If you refer to a variable in the problem statement as \"<strong>N</strong>,\" it should be referred to as \"<strong>N</strong>\" (and not \"<em>n</em>\") in the code stubs as well. </li>\n<li>All variable names and function names should be italicized. For instance, <strong><em>nonRepeated</em></strong> is italicized in the above example.</li>\n</ul>\n</li>\n<li>\n<strong>Terminology Usage</strong>: Be specific and clear when writing a problem statement to avoid ambiguity. <em>For example:</em> When you have to refer to \"binary search tree,\"; do not use \"tree\" or \"binary tree,\" but instead use the \"binary search tree\" phrase.</li>\n</ul>\n<ol start=\"2\">\n<li>\n<h3 id=\"h_01HAAQWQWAMZH2T44Y17YG8K3Y\">Input and Output format</h3>\n</li>\n</ol>\n<ul>\n<li>To ensure a smooth experience for the candidates, you must clearly specify the input and output format while defining the problem statement. </li>\n</ul>\n<ol start=\"2\">\n<li>\n<h3 id=\"h_01HAAQWQWAPHJ7BKQTDFPNNVAM\">Constraints</h3>\n</li>\n</ol>\n<ul>\n<li>Unless you want the candidates to figure out all possible constraints of a problem, you should mention these constraints clearly. <br><em>For example: </em>If the code has to read a number as an input, specify the range of that number. This will help the candidate to decide if <strong><em>int</em>, <em>long </em><em>int</em>, or <em>long, long int</em></strong> has to be used. If the input is a string, specify the special characters such as:<strong>? @ , . ^ %</strong> are also present in the string. You can also specify if it contains consecutive spaces.</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Sample Test Case with Explanation</strong></li>\n</ol>\n<ul>\n<li>A sample test case, with input and expected output, is strongly recommended to clarify the problem statement to the candidates.</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","title":"Defining the Problem Details: Coding and Database Engineer Questions"}