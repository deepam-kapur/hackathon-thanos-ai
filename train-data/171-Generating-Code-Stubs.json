{"url":"https://support.hackerrank.com/hc/en-us/articles/115006430067-Generating-Code-Stubs","body":"<h2><span style=\"font-weight: 400;\">Overview</span></h2>\n<p><span style=\"font-weight: 400;\">You can generate a boilerplate code that saves your time while setting up a coding question. This boilerplate code or code stub handles the inputs and outputs in the code.</span></p>\n<p><span style=\"font-weight: 400;\">Adding code stubs is strongly recommended to save candidates time to avoid minor errors pertaining to the input and output format. The pre-generated code stub allows them to focus on the algorithm required to solve the problem instead of the input and output syntax.</span></p>\n<h2><span style=\"font-weight: 400;\">Code Stub Parameters</span></h2>\n<p><span style=\"font-weight: 400;\">The code stub can be automatically generated for most the languages by specifying the following:</span></p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\">\n<strong>Function Name</strong><span style=\"font-weight: 400;\">: You can only specify one function for the automated code stub generation. However, if you require more than one function, you can select the language and manually type the code stub for that particular language.</span>\n</li>\n<li style=\"font-weight: 400;\" aria-level=\"1\">\n<strong>Return Type</strong><span style=\"font-weight: 400;\">: The function's return type defines the type of value returned by the function. It can be a string, integer, boolean, long integer, integer array, etc. </span>\n</li>\n<li style=\"font-weight: 400;\" aria-level=\"1\">\n<strong>Function Parameters</strong><span style=\"font-weight: 400;\">: Function parameters are the particular variables or input arguments used to refer to a particular data provided as an input. Optionally, you can specify the parameters along with their input type. You can specify more than one function parameter if required.</span>\n</li>\n</ul>\n<h2><span style=\"font-weight: 400;\">Sample</span></h2>\n<table>\n<tbody>\n<tr>\n<td>\n<p><strong>Problem Description</strong></p>\n<p><span style=\"font-weight: 400;\">Write a program that reads a string and finds the first non-repeated character in that string. Treat the characters as case-sensitive. Therefore, \"a\" and \"A\" are different. You will be required to complete a given function </span><em><span style=\"font-weight: 400;\">nonRepeated.</span></em></p>\n<p><strong>Input Format</strong></p>\n<p><span style=\"font-weight: 400;\">There is one sentence in the input that contains String Str.</span></p>\n<p><strong>Constraints</strong></p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">The length of the string is less than 256 characters.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">It is guaranteed that there will be at least one non-repeated character in the given string</span></li>\n</ul>\n<p><strong>Sample Test Case with Explanation</strong></p>\n<p><span style=\"font-weight: 400;\">Sample Input:</span></p>\n<pre><span style=\"font-weight: 400;\">balloonbA</span></pre>\n<p><span style=\"font-weight: 400;\">Sample Output:</span></p>\n<pre><span style=\"font-weight: 400;\">a</span></pre>\n<p><span style=\"font-weight: 400;\">Explanation</span></p>\n<p><span style=\"font-weight: 400;\">\"a\" is the first character that is not repeated in the given string.</span></p>\n<p><strong>Output Format</strong></p>\n<p><span style=\"font-weight: 400;\">A single character that represents the first character in </span><em><span style=\"font-weight: 400;\">Str</span></em><span style=\"font-weight: 400;\"> that is not repeated.</span></p>\n<p><strong>Code Stub</strong></p>\n<ul>\n<li>\n<span style=\"font-weight: 400;\">Function Name: </span><em><span style=\"font-weight: 400;\">nonRepeated</span></em>\n</li>\n<li><span style=\"font-weight: 400;\">Return Type: String</span></li>\n<li>\n<span style=\"font-weight: 400;\">Function Parameters</span>\n<ul>\n<li><span style=\"font-weight: 400;\">Type: String</span></li>\n<li>\n<span style=\"font-weight: 400;\">Name: </span><em><span style=\"font-weight: 400;\">Str</span></em>\n</li>\n</ul>\n</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p><span style=\"font-weight: 400;\">However, if you expect candidates to be familiar with the handling of input and output, you might choose not to generate any code stubs. Candidates have to write the complete code from scratch in this case.</span></p>\n<p><span style=\"font-weight: 400;\">Currently, you cannot generate code stubs automatically for the following languages:</span></p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Cobol</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Elixir</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">F#</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">OCaml</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Racket</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Smalltalk</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">VB.NET</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\"><span style=\"font-weight: 400;\">D</span><span style=\"font-weight: 400;\"></span></span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Fortran</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Groovy</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Pascal</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Common Lisp (SBCL)</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span class=\"wysiwyg-font-size-small\" style=\"font-weight: 400;\">Verilog</span></li>\n</ul>\n<p><span style=\"font-weight: 400;\">For these languages, you can type the code stub manually in the editor.</span></p>\n<h3>Test Case Input Format</h3>\n<p>To learn more about the input format for test cases, check out the <a href=\"https://support.hackerrank.com/hc/en-us/articles/115008319188-Test-Case-Input-Format\" target=\"_self\">Test Case Input Format</a> article. </p>\n<h3> </h3>\n<p> </p>","title":"Generating Code Stubs"}